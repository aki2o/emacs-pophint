(require 'pophint)
(require 'el-expectations)

(expectations
  (desc "compile-to-function nil")
  (expect nil
    (pophint--compile-to-function nil))
  (desc "compile-to-function lambda")
  (expect '(lambda () (message ""))
    (and (functionp (lambda () (message "")))
         (pophint--compile-to-function (lambda () (message "")))))
  (desc "compile-to-function quoted lambda")
  (expect '(lambda () (message ""))
    (and (functionp '(lambda () (message "")))
         (pophint--compile-to-function '(lambda () (message "")))))
  (desc "compile-to-function variable")
  (expect '(lambda () (message ""))
    (let* ((var (lambda () (message ""))))
      (pophint--compile-to-function var)))
  (desc "compile-to-function quoted variable")
  (expect '(lambda () (message ""))
    (let* ((var (lambda () (message ""))))
      (pophint--compile-to-function 'var)))
  (desc "compile-to-function function")
  (expect 'hoge
    (defun hoge () (message ""))
    (and (functionp 'hoge)
         (pophint--compile-to-function 'hoge)))
  (desc "compile-to-function lambda list")
  (expect '((lambda nil (message "a")) (lambda nil (message "b")))
    (pophint--compile-to-function '((lambda () (message "a"))
                                       (lambda () (message "b")))))
  (desc "compile-to-function variable list")
  (expect '((lambda nil (message "a")) (lambda nil (message "b")))
    (let* ((var '((lambda () (message "a"))
                  (lambda () (message "b")))))
      (pophint--compile-to-function var)))
  (desc "compile-to-function quoted variable list")
  (expect '((lambda nil (message "a")) (lambda nil (message "b")))
    (let* ((var '((lambda () (message "a"))
                  (lambda () (message "b")))))
      (pophint--compile-to-function 'var)))
  )

